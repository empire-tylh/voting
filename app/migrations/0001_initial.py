# Generated by Django 3.2.9 on 2022-12-10 23:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phoneno', models.CharField(max_length=11, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('profileimage', models.ImageField(null=True, upload_to='img/profile/%y/%mm/%dd')),
                ('email', models.CharField(max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceid', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='VotingM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('is_start', models.BooleanField(default=False)),
                ('is_end', models.BooleanField(default=False)),
                ('end_time', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SelectionQueen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('year', models.CharField(max_length=10)),
                ('fblink', models.TextField(null=True)),
                ('iglink', models.TextField(null=True)),
                ('profileimage', models.ImageField(null=True, upload_to='img/selection/profile/%y/%mm/%dd')),
                ('is_male', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sel_queen', to='app.votingm')),
            ],
        ),
        migrations.CreateModel(
            name='SelectionKing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('year', models.CharField(max_length=10)),
                ('fblink', models.TextField(null=True)),
                ('iglink', models.TextField(null=True)),
                ('profileimage', models.ImageField(null=True, upload_to='img/selection/profile/%y/%mm/%dd')),
                ('is_male', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sel_king', to='app.votingm')),
            ],
        ),
        migrations.CreateModel(
            name='SelectionImageQueen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='img/selection/queen/%y/%mm/%dd')),
                ('sk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app.selectionqueen')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SelectionImageKing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='img/selection/king/%y/%mm/%dd')),
                ('sk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app.selectionking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinishQueenGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.device')),
                ('selection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.selectionqueen')),
                ('vm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finish_queen', to='app.votingm')),
            ],
        ),
        migrations.CreateModel(
            name='FinishKingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.device')),
                ('selection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.selectionking')),
                ('vm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finish_king', to='app.votingm')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='votingm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='app.votingm'),
        ),
    ]
